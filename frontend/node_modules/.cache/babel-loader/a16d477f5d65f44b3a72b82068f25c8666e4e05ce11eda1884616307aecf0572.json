{"ast":null,"code":"import React from 'react';\nimport axios from \"axios\";\nimport { getToken } from \"../services/localStorageService\";\nimport { toast } from 'react-toastify';\nconst service = axios.create({\n  baseURL: \"http://localhost:5000\"\n});\n\n// middleware for sending request\nservice.interceptors.request.use(req => {\n  console.log(req.url);\n  if (req.url.includes(\"auth\")) {\n    req.headers[\"Authorization\"] = `Bearer ${getToken(\"activeUserToken\")}`;\n  }\n  return req;\n});\n\n// function fun(){\n//   const notify = () => toast(\"Wow so easy!\");\n\n//   console.log('in fun');\n//   return (\n//     <div>\n//       {/* <button onClick={notify}>Notify!</button> */}\n//       {notify()}\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\n// middleware for getting response\nservice.interceptors.response.use(res => {\n  return res;\n}, err => {\n  // toast('hiii')\n  console.log(err.response.data.message);\n  // fun()\n  toast.war(err.response.data.message);\n});\nexport default service;","map":{"version":3,"names":["React","axios","getToken","toast","service","create","baseURL","interceptors","request","use","req","console","log","url","includes","headers","response","res","err","data","message","war"],"sources":["/home/am-pc-50/CoderSagar/Assignments/task-management-board/frontend/src/middlewares/interceptor.jsx"],"sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport { getToken } from \"../services/localStorageService\";\n\nimport { toast } from 'react-toastify';\n\nconst service = axios.create({\n  baseURL: \"http://localhost:5000\",\n});\n\n// middleware for sending request\nservice.interceptors.request.use((req) => {\n  console.log(req.url);\n\n  if (req.url.includes(\"auth\")) {\n    req.headers[\"Authorization\"] = `Bearer ${getToken(\"activeUserToken\")}`;\n  }\n  return req;\n});\n\n\n// function fun(){\n//   const notify = () => toast(\"Wow so easy!\");\n\n//   console.log('in fun');\n//   return (\n//     <div>\n//       {/* <button onClick={notify}>Notify!</button> */}\n//       {notify()}\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\n// middleware for getting response\nservice.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (err) => {\n    // toast('hiii')\n    console.log(err.response.data.message);\n    // fun()\n    toast.war(err.response.data.message)\n  }\n);\n\nexport default service;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iCAAiC;AAE1D,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC3BC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,OAAO,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACxCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,GAAG,CAAC;EAEpB,IAAIH,GAAG,CAACG,GAAG,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC5BJ,GAAG,CAACK,OAAO,CAAC,eAAe,CAAC,GAAI,UAASb,QAAQ,CAAC,iBAAiB,CAAE,EAAC;EACxE;EACA,OAAOQ,GAAG;AACZ,CAAC,CAAC;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAN,OAAO,CAACG,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC9BQ,GAAG,IAAK;EACP,OAAOA,GAAG;AACZ,CAAC,EACAC,GAAG,IAAK;EACP;EACAP,OAAO,CAACC,GAAG,CAACM,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;EACtC;EACAjB,KAAK,CAACkB,GAAG,CAACH,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;AACtC,CACF,CAAC;AAED,eAAehB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}